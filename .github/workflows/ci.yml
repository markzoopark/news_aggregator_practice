name: CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    backend-tests:
        name: 'Backend: тести'
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: actions/setup-python@v4
              with:
                  python-version: '3.13'
            - run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
                  pip install pytest pytest-asyncio
            - run: pytest tests -q

    frontend-tests:
        name: 'Frontend: index.html'
        runs-on: ubuntu-latest
        needs: backend-tests
        steps:
            - uses: actions/checkout@v3

            # Встановлюємо http-server локально
            - name: Install http-server (local)
              run: npm install http-server

            # Запускаємо сервер через npx
            - name: Запустити локальний сервер фронтенду та перевірити
              run: |
                  npx http-server frontend -p 8001 &
                  sleep 2
                  curl -f http://localhost:8001/index.html

    publish-images:
        name: 'Build & push Docker images'
        runs-on: ubuntu-latest
        needs: [backend-tests, frontend-tests]
        steps:
            - uses: actions/checkout@v3

            - uses: docker/setup-qemu-action@v3
            - uses: docker/setup-buildx-action@v3

            - uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Build & push backend
              uses: docker/build-push-action@v5
              with:
                  context: ./backend
                  file: ./backend/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/news-backend:latest
                  push: true
                  provenance: false

            - name: Build & push frontend
              uses: docker/build-push-action@v5
              with:
                  context: ./frontend
                  file: ./frontend/Dockerfile
                  tags: ${{ secrets.DOCKERHUB_USERNAME }}/news-frontend:latest
                  push: true
                  provenance: false
